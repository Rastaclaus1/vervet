{
  "components": {
    "headers": {
      "RequestIDResponseHeader": {
        "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.\n",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "VersionRequestedResponseHeader": {
        "description": "A header containing the version of the endpoint requested by the caller.",
        "schema": {
          "$ref": "#/components/schemas/Version"
        }
      },
      "VersionServedResponseHeader": {
        "description": "A header containing the version of the endpoint that was served by the API.",
        "schema": {
          "$ref": "#/components/schemas/Version"
        }
      }
    },
    "parameters": {
      "Pagination": {
        "description": "The parameters used to paginate through a list of results from the API.",
        "in": "query",
        "name": "page",
        "schema": {
          "additionalProperties": false,
          "properties": {
            "after": {
              "type": "string"
            },
            "before": {
              "type": "string"
            },
            "size": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "Version": {
        "description": "The requested version of the endpoint to process the request",
        "in": "query",
        "name": "version",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "400": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Bad Request: A parameter provided as a part of the request was invalid.",
        "headers": {
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIDResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          }
        }
      },
      "401": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
        "headers": {
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIDResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          }
        }
      },
      "404": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Not Found: The resource being operated on could not be found.",
        "headers": {
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIDResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          }
        }
      },
      "500": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Internal Server Error: An error was encountered while attempting to process the request.",
        "headers": {
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIDResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          }
        }
      }
    },
    "schemas": {
      "Error": {
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "meta": {
            "additionalProperties": true,
            "type": "object"
          },
          "source": {
            "additionalProperties": false,
            "properties": {
              "parameter": {
                "type": "string"
              },
              "pointer": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "detail"
        ],
        "type": "object"
      },
      "ErrorDocument": {
        "additionalProperties": false,
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "type": "array"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/JSONAPI"
          }
        },
        "required": [
          "jsonapi",
          "errors"
        ],
        "type": "object"
      },
      "HelloWorld": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "message": {
                "type": "string"
              },
              "requestSubject": {
                "additionalProperties": false,
                "properties": {
                  "clientId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "publicId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "publicId",
                  "type"
                ],
                "type": "object"
              }
            },
            "required": [
              "message",
              "requestSubject"
            ],
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "JSONAPI": {
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "type": "object"
      },
      "LinkProperty": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "additionalProperties": false,
            "properties": {
              "href": {
                "type": "string"
              },
              "meta": {
                "additionalProperties": true,
                "type": "object"
              }
            },
            "required": [
              "href",
              "meta"
            ],
            "type": "object"
          }
        ]
      },
      "Links": {
        "additionalProperties": false,
        "properties": {
          "first": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "last": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "next": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "prev": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "related": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "self": {
            "$ref": "#/components/schemas/LinkProperty"
          }
        },
        "type": "object"
      },
      "Project": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "created": {
                "description": "The date that the project was created on",
                "example": "2021-05-29T09:50:54.014Z",
                "type": "string"
              },
              "hostname": {
                "description": "The hostname for a CLI project, null if not set",
                "nullable": true,
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "origin": {
                "description": "The origin the project was added from",
                "example": "github",
                "type": "string"
              },
              "status": {
                "description": "Describes if a project is currently monitored or it is de-activated",
                "example": "active",
                "type": "string"
              },
              "type": {
                "description": "The package manager of the project",
                "example": "maven",
                "type": "string"
              }
            },
            "required": [
              "name",
              "created",
              "origin",
              "type",
              "status"
            ],
            "type": "object"
          },
          "id": {
            "description": "The ID.",
            "example": "331ede0a-de94-456f-b788-166caeca58bf",
            "type": "string"
          },
          "type": {
            "description": "Content type.",
            "example": "projects",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "Version": {
        "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
        "type": "string"
      }
    }
  },
  "info": {
    "title": "Registry",
    "version": "3.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/examples/hello-world/{id}": {
      "get": {
        "description": "Get a single result from the hello-world example",
        "operationId": "helloWorldGetOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "$ref": "#/components/parameters/Pagination"
          },
          {
            "description": "The id of the hello-world example entity to be retrieved.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HelloWorld"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JSONAPI"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A hello world entity being requested is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIDResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "x-snyk-api-version": "2021-06-01"
    },
    "/openapi": {
      "get": {
        "description": "List available versions of OpenAPI specification",
        "operationId": "listAPIVersions",
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of available versions is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIDResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/openapi/{version}": {
      "get": {
        "description": "Get OpenAPI specification effective at version.",
        "operationId": "getAPIVersion",
        "parameters": [
          {
            "description": "The requested version of the API",
            "in": "path",
            "name": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OpenAPI specification matching requested version is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIDResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/orgs/{orgId}/projects": {
      "get": {
        "description": "Get a list of an organization's projects.",
        "operationId": "getOrgsProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "$ref": "#/components/parameters/Pagination"
          },
          {
            "description": "The id of the org to return a list of projects",
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The options for filtering the result set",
            "in": "query",
            "name": "filters",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "attributes.criticality": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "attributes.environment": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "attributes.lifecycle": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "origin": {
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "active",
                    "inactive"
                  ],
                  "type": "string"
                },
                "tags.includes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      },
                      "type": "array"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JSONAPI"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A list of projects is returned for the targeted org",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIDResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "x-snyk-api-version": "2021-06-04~experimental"
    }
  },
  "servers": [
    {
      "description": "Test API v3",
      "url": "https://example.com/api/v3"
    }
  ]
}